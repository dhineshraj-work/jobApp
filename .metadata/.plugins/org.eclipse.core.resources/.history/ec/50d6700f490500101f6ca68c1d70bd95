package com.dhinesh.loginService.model;


import org.springframework.stereotype.Component;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.*;

@Entity
@Table(name = "users")
@Component
public class UserModel {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer userId;
	
	@Column(unique = true, nullable = false)
	private String email;
	
	@JsonIgnore
	private String password;
	
	@OneToOne(mappedBy = "user", cascade = CascadeType.ALL)
	private UserDetailsModel userDetails;
	
	@ManyToOne
	@JoinColumn(name = "role_id")
	private Role role;
	
	@OneToOne(mappedBy = "user", cascade = CascadeType.ALL)
	@JsonIgnore
	private UserHistoryModel userHistory;
	
	
	
	public UserModel() {
	}
	
	public UserModel(Integer userId, String password, String email, UserDetailsModel userDetails, Role role, UserHistoryModel userHistory) {
		//super();
		this.userId = userId;
		this.email = email;
		this.password=password;
		this.userDetails = userDetails;
		this.role = role;
	}
	public UserModel(String email, String password, UserDetailsModel userDetails, Role role, UserHistoryModel userHistory) {
		//super();
		this.email = email;
		this.password=password;
		this.userDetails = userDetails;
		this.role = role;
		this.userHistory=userHistory;
	}
	public Integer getUserId() {
		return userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	
	public UserDetailsModel getUserDetails() {
		return userDetails;
	}
	public void setUserDetails(UserDetailsModel userDetails) {
		this.userDetails = userDetails;
	}
	public Role getRole() {
		return role;
	}
	public void setRole(Role role) {
		this.role = role;
	}
	
	public UserHistoryModel getUserHistory() {
	    return userHistory;
	}

	public void setUserHistory(UserHistoryModel userHistory) {
	    this.userHistory = userHistory;
	}
}
